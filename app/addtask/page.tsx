"use client";

import React from "react";
import Image from "next/image";
// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏û‡∏≤‡∏ò‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ô‡∏µ‡πâ‡∏ß‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà:
import planning from "/assets/done.png"; 
import Link from "next/link";
import { useState } from "react";
import { supabase } from "@/lib/supabaseClient";

export default function Page() {
  // ‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: setTile ‡πÄ‡∏õ‡πá‡∏ô setTitle ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
  const [title, setTitle] = useState(""); 
  const [detail, setDetail] = useState("");
  const [is_Completed, setIsCompleted] = useState<boolean>(false);
  const [Image_file, setImageFile] = useState<File | null>(null);
  const [preview_fie, setPreviewfile] = useState<string>("");

  function handleSelectImagePreview(e: React.ChangeEvent<HTMLInputElement>) {
    const file = e.target.files?.[0] || null;
    setImageFile(file);
    if (file) {
      setPreviewfile(URL.createObjectURL(file as Blob));
    } else {
      setPreviewfile("");
    }
  }

  async function handleUploadAndSave(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault(); 
    alert('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');

    // üí° ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏à‡∏≤‡∏Å "" ‡πÄ‡∏õ‡πá‡∏ô null ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ image_url ‡πÉ‡∏ô DB ‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö null
    let image_url: string | null = null; 
    const BUCKET_NAME = 'task_bk'; 
    const TABLE_NAME = 'task_tb'; 

    if (Image_file) {
      const new_image_file_name = `${Date.now()}-${Image_file.name}`;

      // 1. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
      const { error: uploadError } = await supabase.storage
        .from(BUCKET_NAME)
        .upload(new_image_file_name, Image_file);

      if (uploadError) {
        console.error("Upload error:", uploadError);
        alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: ${uploadError.message}
        ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Storage Policy ‡∏Ç‡∏≠‡∏á Bucket ${BUCKET_NAME}`);
        return; 
      }

      // 2. ‡∏î‡∏∂‡∏á Public URL
      const { data: publicURLData } = supabase.storage
        .from(BUCKET_NAME)
        .getPublicUrl(new_image_file_name);
      
      image_url = publicURLData.publicUrl;
    }
    
    // 3. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Task
    const { error: dbError } = await supabase
        .from(TABLE_NAME)
        .insert([
            {
                title: title,
                detail: detail,
                is_completed: is_Completed,
                image_url: image_url, // ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô null ‡∏´‡∏£‡∏∑‡∏≠ URL
            }
        ]);

    if(dbError) {
        console.error("Database INSERT error:", dbError);
        alert(`‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${dbError.message}
        ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö RLS Policy ‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á ${TABLE_NAME}`);
    } else {
        alert("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
        
        // 4. Cleanup/Reset State
        setTitle(''); // ‚úÖ ‡πÉ‡∏ä‡πâ setTitle
        setDetail('');
        setIsCompleted(false);
        setImageFile(null);
        setPreviewfile(""); 
        
        // ** (Optional) ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà /alltask:
        // const router = useRouter(); 
        // router.push('/alltask');
    }
  }

  return (
    <div className="flex flex-col w-3/4 mx-auto">
      <div className="flex items-center mt-20 flex-col">
        <Image src={planning} alt="" width={150} height={150} />
      </div>
      <div className="mt-10 flex flex-col border border-gray-300 p-5 rounded-xl">
        <h1 className="text-center text-xl font-bold">‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà</h1>
        <form onSubmit={handleUploadAndSave}>
          
          <div className="flex flex-col mt5">
            <label className="text-lg font-bold">‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥</label>
            <input
              type="text"
              className="border border-gray-300 rounded-lg p-2"
              value={title}
              // ‚úÖ ‡πÉ‡∏ä‡πâ setTitle
              onChange={(e) => setTitle(e.target.value)} 
            />
          </div>

          <div className="flex flex-col mt5">
            <label className="text-lg font-bold">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</label>
            <textarea
              className="border border-gray-300 rounded-lg"
              value={detail}
              onChange={(e) => setDetail(e.target.value)}
            ></textarea>
          </div>

          <div className="flex flex-col mt5">
            <label className="text-lg font-bold">‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û</label>
            <input
              id="fileInput"
              type="file"
              className="hidden"
              accept="image/*"
              onChange={handleSelectImagePreview}
            />
            <label
              htmlFor="fileInput"
              className="bg-blue-500 rounded-lg p-2 text-white cursor-pointer w-30 text-center"
            >
              ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ
            </label>
            {preview_fie && (
              <div className="mt-3">
                <Image src={preview_fie} alt="preview" width={100} height={100} />
              </div>
            )}
          </div>

          <div className="flex flex-col mt5">
            <label className="text-lg font-bold">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏á‡∏≤‡∏ô</label>
            <select
              className="border border-gray-300 rounded-lg p-2"
              value={is_Completed ? '1' : '0'} 
              onChange={(e) => setIsCompleted(e.target.value === '1')} 
            >
              <option value="0">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô</option>
              <option value="1">‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô</option>
            </select>
          </div>

          <div className="flex flex-col mt5">
            <button type="submit" className="bg-green-500 rounded-lg p-2 text-white">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏á‡∏≤‡∏ô</button>
          </div>
        </form>
        <div>
          <div className="flex justify-center mt-10">
            <Link href="/alltask" className="text-blue-700 font-bold">‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</Link>
          </div>
        </div>
      </div>
    </div>
  );
}